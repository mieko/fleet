# Special case on http://{www.,}meter.md/ -> https://meter.md/,
server {
  server_name meter.md www.meter.md;
  listen 80;
  listen [::]:80;
  return 301 https://meter.md$request_uri;
}

# Catch all tenant sites, move them to https, strip www if presented.
server {
  server_name *.meter.md;

  listen 80;
  listen [::]:80;

  if ($host ~ \Awww\.(.+)) {
    set $host_without_www $1;
    return 301 https://$host_without_www$request_uri;
  }

  return 301 https://$host$request_uri;
}


server {
  server_name .meter.md;

  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  root /srv/metermaid/public;

  client_max_body_size 100M;
  server_tokens        off;

  ssl                       on;
  ssl_certificate           /etc/ssl/metermd/star.meter.md.bundle.crt;
  ssl_certificate_key       /etc/ssl/metermd/star.meter.md.key;
  ssl_dhparam               /etc/ssl/metermd/dhparam;
  ssl_session_cache         builtin:1000 shared:SSL:10m;
  ssl_prefer_server_ciphers on;
  ssl_session_timeout       5m;
  ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers               'ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AES:RSA+3DES:!ADH:!AECDH:!MD5:!DSS';


  resolver                  8.8.8.8;
  ssl_stapling              on;

  add_header                Strict-Transport-Security 'max-age=31536000'; includeSubDomains; preload;

  gzip on;
  gzip_types application/json;
  gzip_static on;


  # www.tenant.meter.md -> tenant.meter.md and www.meter.md -> meter.md.
  # Note that for tenants, our wildcard cert doesn't match *.tenant.meter.md,
  # But if the user somehow explicitly typed https://www.meter.md/, that'd be
  # fixed, and if the users explicitly requested https://www.tenant.meter.md/,
  # perhaps they'd get a warning they can click through.
  if ($host ~ \Awww\.(.+)) {
    set $host_without_www $1;
    return 301 https://$host_without_www$request_uri;
  }


  # Our Keybase proofs, see repo: metermd/keybase
  location /.well-known {
    alias /var/www/well-known;
  }
}
